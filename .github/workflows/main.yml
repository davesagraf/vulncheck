name: NodeJS CI/CD with Snyk

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  opensource-security:
    runs-on: ubuntu-latest
    outputs:
      security-ok: ${{ steps.snyk-output.outputs.is-secure }}
    steps:
      - uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Run Snyk to check for vulnerabilities in dependencies
        id: snyk
        uses: snyk/actions/node@master
        with:
          command: test
          json: true
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Save Snyk Open Source Output
        run: echo "${{ steps.snyk.outputs.json }}" > snyk-dependency-output.json
      - name: Determine if Snyk found vulnerabilities
        id: snyk-output
        run: |
          vulnerabilities=$(jq '.issues.vulnerabilities | length' snyk-dependency-output.json)
          if [[ "$vulnerabilities" -eq 0 ]]; then
            echo "::set-output name=is-secure::true"
          else
            echo "::set-output name=is-secure::false"
          fi

  code-security:
    runs-on: ubuntu-latest
    outputs:
      code-ok: ${{ steps.snyk-code-output.outputs.is-secure }}
    steps:
      - uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Run Snyk to check for vulnerabilities in code
        id: snyk-code
        uses: snyk/actions/node@master
        with:
          command: code test
          json: true
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Save Snyk Code Output
        run: echo "${{ steps.snyk-code.outputs.json }}" > snyk-code-output.json
      - name: Determine if Snyk Code found vulnerabilities
        id: snyk-code-output
        run: |
          vulnerabilities=$(jq '.issues.vulnerabilities | length' snyk-code-output.json)
          if [[ "$vulnerabilities" -eq 0 ]]; then
            echo "::set-output name=is-secure::true"
          else
            echo "::set-output name=is-secure::false"
          fi

  handle-pr:
    needs: [opensource-security, code-security]
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Accept or Decline PR based on Snyk Results
        run: |
          if [[ "${{ needs.opensource-security.outputs.security-ok }}" == "true" && "${{ needs.code-security.outputs.code-ok }}" == "true" ]]; then
            echo "No vulnerabilities found, PR can be merged."
          else
            echo "Vulnerabilities found, declining PR."
            exit 1  # This will fail the workflow if vulnerabilities are found

  open-source-report:
    needs: [opensource-security]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Upload Snyk Open Source Reports
        uses: actions/upload-artifact@v2
        with:
          name: Snyk Open Source Reports
          path: snyk-dependency-output.json

      - name: Publish Snyk Open Source Report to Summary
        if: always()
        run: |
          if [[ -s snyk-dependency-output.json ]]; then
            {
              echo "### Snyk Open Source Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```Report'
              cat snyk-dependency-output.json
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi

  code-report:
    needs: [code-security]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Upload Snyk Code Reports
        uses: actions/upload-artifact@v2
        with:
          name: Snyk Code Reports
          path: snyk-code-output.json

      - name: Publish Snyk Code Report to Summary
        if: always()
        run: |
          if [[ -s snyk-code-output.json ]]; then
            {
              echo "### Snyk Code Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```Report'
              cat snyk-code-output.json
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi
